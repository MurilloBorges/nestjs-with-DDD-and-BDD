version: '3'

services:
    pgsql:
        container_name: pgsql
        restart: always
        image: postgres:alpine
        ports:
            - target: 5432
              published: 5432
              protocol: tcp
              mode: host
        volumes:
            - pgsql_data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: pguser
            POSTGRES_PASSWORD: pgpassword
        networks:
            - apps-network
    mongodb:
        image: mongo:latest
        container_name: mongodb
        environment:
            PUID: 1000
            PGID: 1000
        volumes:
            - mongodb_data:/data/db
        ports:
            - target: 27017
              published: 27017
              protocol: tcp
              mode: host
        restart: always
        networks:
            - apps-network
    redis:
        container_name: redis
        restart: always
        image: redis:alpine
        ports:
            - target: 6379
              published: 6379
              protocol: tcp
              mode: host
        volumes:
            - redis_data:/data
        networks:
            - apps-network
    client:
        container_name: client
        build:
            context: ./src/client
            dockerfile: ./node.Dockerfile
        command: npm run start:client
        environment:
            - PORT=3000
        ports:
            - 3000:3000
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        networks:
            - apps-network
        links:
            - pgsql
        depends_on:
            - pgsql
    auth:
        container_name: auth
        build:
            context: ./src/authentication
            dockerfile: ./node.Dockerfile
        command: npm run start:auth
        environment:
            - PORT=3001
        ports:
            - 3001:3001
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        networks:
            - apps-network
        links:
            - pgsql
        depends_on:
            - pgsql
    product:
        container_name: product
        build:
            context: ./src/product
            dockerfile: ./node.Dockerfile
        command: npm run start:product
        environment:
            - PORT=3002
        ports:
            - 3002:3002
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        networks:
            - apps-network
    wishlist:
        container_name: wishlist
        build:
            context: ./src/wishlist
            dockerfile: ./node.Dockerfile
        command: npm run start:wishlist
        environment:
            - PORT=3003
        ports:
            - 3003:3003
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        networks:
            - apps-network
        links:
            - mongodb
        depends_on:
            - mongodb

volumes:
    pgsql_data:
    mongodb_data:
    redis_data:

networks:
    apps-network:
